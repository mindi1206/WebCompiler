<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.dms.web.mapper.Mapper">

  
 	<select id="getTime" resultType="string">
 		select now()
 	</select>
 	
     <insert id="user_insert"> <!-- 수정해주세요 -->
   		insert into student (id, passwd, username, snum, depart, mobile, email) values
 		(#{id}, #{passwd}, #{username}, #{snum}, #{depart}, #{mobile}, #{email})
     </insert> 

     

     <select id="user_selectById" resultType="UserVo">
 		select * from user where user_id = #{id}
 	</select>

 	
     <select id="user_selectForLogin" resultType="UserVO">
 		select * from user where user_id = #{user_id} and user_passwd = #{user_passwd}

     </select>
 	

     <select id="user_selectAll" resultType="UserVO">
 		select * from user
     </select>
 	
     <update id="user_update" parameterType="UserVO"> <!-- 수정해주세요 -->
 		update user set user_name = #{user_name}, user_introduce = #{user_introduce} where user_id = #{user_id}
     </update>
     
     <update id="save_img" parameterType="UserVO"> 
   		update user set user_img = #{user_img} where user_id = #{user_id}
     </update> 
 
    <delete id="user_deleteById">
		delete from user where user_id = #{id}
    </delete>
    
    <insert id="board_insert_free">
    	insert into board (board_title, board_content, board_upload, user_id, problem_id) values (#{board_title}, #{board_content}, #{board_upload}, #{user_id}, #{problem_id})
    </insert>
    <insert id="board_insert_question">
    	insert into board (board_title, board_content, board_upload, user_id) values (#{board_title}, #{board_content}, #{board_upload}, #{user_id})
    </insert>
    <select id="board_selectByid" resultType="BoardVO">
    	select * from board where board_id=#{board_id}
    </select>
    <select id="board_selectAll" resultType="BoardVO">
    <![CDATA[
    	select * from board limit #{pageStart}, #{perPageNum}
    ]]> 
    </select>
    <update id="update test">
    	update board set board_content =
    </update>
    <update id="board_update_free">
    	update board set board_id = #{board_id}, board_title = #{board_title}, board_content= #{board_content} , board_upload = #{board_upload}, user_id = #{user_id} where board_id = #{board_id}
    </update>
    <update id="board_update_question">
    	update board set board_id = #{board_id}, board_title = #{board_title}, board_content= #{board_content} , board_upload = #{board_upload}, user_id = #{user_id}, problem_id = #{problem_id} where board_id = #{board_id}
    </update>
    <delete id="board_delete">
    	delete from board where board_id=#{board_id}
    </delete>
    <select id="board_count" resultType="int">
    	<![CDATA[
    	select COUNT(board_id) from board
    	]]>	
    </select>
    <!-- 댓글 -->
    <select id="comment_selectAll" resultType="CommentsVO">
    	<![CDATA[
 			select * from comments where board_id = ${board_id}
     	]]> 	
    </select>
    
    <!-- 카테고리 -->
    <select id="category_selectAll" resultType="CategoryVO">
    <![CDATA[
 		select * from category limit #{pageStart}, #{perPageNum}
     ]]> 
    
    </select>
    <!-- 문제 -->
     <select id="problem_selectAll" resultType="ProblemVO">
    	select * from problem
    </select>
    <select id="problem_selectBylevel" resultType="ProblemVO">
    	select * from problem where problem_level = #{problem_level} and category_id = #{category_id}
    </select>
    <select id="problem_selectByid" resultType="ProblemVO">
    	select * from problem where problem_id = #{problem_id}
    </select>
    
    <select id="listPaging" resultType="ProblemVO">
    	select * from problem limit #{page}, 10
    </select>
    <select id="listCount" resultType="int">
    	select COUNT(problem_id) from problem
    </select>
    <select id="listCountFilter" resultType="int">
    	select COUNT(problem_id) from problem where problem_level = #{problem_level} and category_id = #{category_id} 
    </select>
    
    <select id="listCriteria" resultType="ProblemVO">
    	select * from problem limit #{pageStart}, #{perPageNum}
    </select>
    <select id="listCriteriaFilter" resultType="ProblemVO">
    	select * from problem where problem_level = #{problem_level} and category_id = #{category_id}  limit #{pageStart}, #{perPageNum}
    </select>
    <insert id="problem_insert">
    <!-- private int problem_id;
	private String problem_title;
	private String problem_content;
	private String problem_hint;
	private int problem_time;
	
	private int problem_submitnum;
	private int problem_sucessnum;
	private int problem_failnum;
	private int problem_level;
	private String category_id; -->
    
    	insert into problem (problem_id, problem_title, problem_content, problem_hint, problem_time,
    	problem_submitnum, problem_successnum, problem_failnum, problem_level, category_id )
    	values (#{problem_id}, #{problem_title}, #{problem_content}, #{problem_hint}, #{problem_time},
    	#{problem_submitnum}, #{problem_successnum}, #{problem_failnum}, #{problem_level}, #{category_id})
    </insert>
    <!-- 테스트케이스 -->
    <select id="testcase_selectByid" resultType="TestcaseVO">
    	<!-- 테스트케이스 하나만 갖고옴 -->
    	select * from testcase where problem_id = #{problem_id} limit 1;
    </select>
    <insert id="testcase_insert">
    	insert into testcase (testcase_input, testcase_output, problem_id) values (#{testcase_input}, #{testcase_output}, #{problem_id})
    </insert>
    <!-- 게시판 -->
   
    
    <select id="testcase_input_selectList" resultType="String"> 
    	select testcase_input from testcase where problem_id= #{problem_id} 
    </select>
    
    <select id="testcase_output_selectList" resultType="String"> 
    	select testcase_output from testcase where problem_id= #{problem_id} 
    </select>
	
</mapper>  